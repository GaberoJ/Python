'''
*(вместо задачи 3) Написать функцию thesaurus_adv(), принимающую в качестве аргументов
строки в формате «Имя Фамилия» и возвращающую словарь, в котором ключи — первые буквы
фамилий, а значения — словари, реализованные по схеме предыдущего задания и содержащие
записи, в которых фамилия начинается с соответствующей буквы. Например:
#>>> thesaurus_adv("Иван Сергеев", "Инна Серова", "Петр
Алексеев", "Илья Иванов", "Анна Савельева")
{
    "А": {
        "П": ["Петр Алексеев"]
        },
    "И": {
        "И": ["Илья Иванов"]
        },
    "С": {
            "И": ["Иван Сергеев", "Инна Серова"],
            "А": ["Анна Савельева"]
        }
}
Как поступить, если потребуется сортировка по ключам?
'''

def thesaurus_adv(*args):
    """Creates a complex dictionary."""
    # Увидел, что в ходе решения есть три повтора, поэтому решил побаловаться с функциями)
    def str_name():
        return f'{i[0]} {i[-1]}'

    contacts = {}

    for i in args:
        i = i.split(' ')
        if i[-1][0] in contacts:
            if i[0][0] in contacts[i[-1][0]]:
                contacts[i[-1][0]][i[0][0]].append(str_name())
            contacts[i[-1][0]].setdefault(i[0][0], [str_name()])
        contacts.setdefault(i[-1][0], {i[0][0]: [str_name()]})
    contacts = dict(sorted(contacts.items()))

    # Для красивого вывода:
    for key, value in contacts.items():
        print(f'{key} {value}')
    print()

    return contacts


if __name__ == "__main__":
    print(thesaurus_adv("Иван Сергеев", "Инна Серова", "Антон Шастун", "Григорий Шахов",
                  "Артур Иванов", "Даниил Сидоров", "Григорий Симонов", "Александр Шпиц",
                  "Петр Алексеев", "Илья Иванов", "Анна Савельева"))
